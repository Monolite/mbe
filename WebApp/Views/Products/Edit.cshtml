@model Business.Essentials.Model.Product

@{
    ViewBag.Title = Business.Essentials.Resources.Edit;
}

<h2>@Business.Essentials.Resources.Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.tokeninput.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.tokeninput.formatters.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/themes/base/token-input.css")" rel="stylesheet" type="text/css" />

@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>@Business.Essentials.Resources.Title_Product</legend>

        @Html.HiddenFor(model => model.Id)

        <div style="float:right">
            <div class="editor-label">
                @Html.LabelFor(model => model.Photo)
            </div>
            <div class="editor-input">
                <img src="@Url.Content("~/Photos/" + Model.Photo)" alt="@Model" class="medium" />
                <br/>
                <input type="file" name="file" id="file" />
            </div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Code)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Code)
            @Html.ValidationMessageFor(model => model.Code)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.SKU)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SKU)
            @Html.ValidationMessageFor(model => model.SKU)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Brand)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Brand)
            @Html.ValidationMessageFor(model => model.Brand)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Model)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Model)
            @Html.ValidationMessageFor(model => model.Model)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Cost)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Cost)
            @Html.ValidationMessageFor(model => model.Cost)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UnitOfMeasurement)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UnitOfMeasurement)
        </div>

        <div class="editor-label-checkbox">
            @Html.LabelFor(model => model.IsPerishable)
            @Html.CheckBoxFor(model => model.IsPerishable)
        </div>
        <div class="editor-label-checkbox">
            @Html.LabelFor(model => model.IsSeriable)
            @Html.CheckBoxFor(model => model.IsSeriable)
        </div>
         <div class="editor-label-checkbox">
            @Html.LabelFor(model => model.IsInvoiceable)
            @Html.CheckBoxFor(model => model.IsInvoiceable)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comment)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.TaxRate)
        </div>
        <div>
            <select id="TaxRate" name="TaxRate">
                <option value="0" @(Model.TaxRate == 0 ? "selected='selected'" : "")>0%</option>
                <option value="0.16" @(Model.TaxRate != 0 ? "selected='selected'" : "")>16%</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price1)
            @Html.ValidationMessageFor(model => model.Price1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price2)
            @Html.ValidationMessageFor(model => model.Price2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price3)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price3)
            @Html.ValidationMessageFor(model => model.Price3)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price4)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price4)
            @Html.ValidationMessageFor(model => model.Price4)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price5)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price5)
            @Html.ValidationMessageFor(model => model.Price5)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price6)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price6)
            @Html.ValidationMessageFor(model => model.Price6)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price7)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price7)
            @Html.ValidationMessageFor(model => model.Price7)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Category)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CategoryId)
            @Html.ValidationMessageFor(model => model.CategoryId)
            @if (Model.Category != null)
            {
                <script type="text/javascript">
                    var category = [{ id: "@Model.Category.Id", name: "@Model.Category.Name"}];
                </script>
            }
            <script type="text/javascript">
                $(document).ready(function () {
                    $("#CategoryId").tokenInput("@Url.Action("GetSuggestions", "Categories")",
                    {
                        hintText: "@Business.Essentials.Resources.HIntText",
                        noResultsText: "@Business.Essentials.Resources.NoResultsText",
                        searchingText: "@Business.Essentials.Resources.SearchingText",
                        prePopulate: (typeof supplier === "undefined") ? null : category,
                        queryParam: "pattern", minChars: 1, tokenLimit: 1
                    });
                });
            </script>
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Supplier)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SupplierId)
            @Html.ValidationMessageFor(model => model.SupplierId)
            @if (Model.Supplier != null)
            {
                <script type="text/javascript">
                    var supplier = [{ id: "@Model.Supplier.Id", name: "@Model.Supplier.Name"}];
                </script>
            }
            <script type="text/javascript">
                $(document).ready(function () {
                $("#SupplierId").tokenInput("@Url.Action("GetSuggestions", "Suppliers")",
                {
                    hintText: "@Business.Essentials.Resources.HIntText",
                    noResultsText: "@Business.Essentials.Resources.NoResultsText",
                    searchingText: "@Business.Essentials.Resources.SearchingText",
                    prePopulate: (typeof supplier === "undefined") ? null : supplier,
                    queryParam: "pattern",minChars: 1,tokenLimit: 1});
                });
            </script>
        </div>

        <p>
            <input type="submit" value= "@Business.Essentials.Resources.Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink(Business.Essentials.Resources.BackToList, "Index")
</div>
