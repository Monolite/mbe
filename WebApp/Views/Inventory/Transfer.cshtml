@using Business.Essentials
@using Business.Essentials.Model;
@using Business.Essentials.WebApp.Helpers;
@model InventoryTransfer

@{
    ViewBag.Title = Resources.Title_InventoryTransfer;
}

<h2>@Resources.DisplayName_InventoryTransfers</h2>

<fieldset>
    <legend>@Resources.DisplayName_InventoryInformation</legend>
    <div class="display-label right floating">
        @Html.LabelFor(model => model.Id):
        @Html.DisplayFor(model => model.Id)
    </div>
    <div class="display-label right floating">
        @Html.LabelFor(model => model.CreationTime):
        @Html.DisplayFor(model => model.CreationTime)
    </div>
    <div class="display-label">
        @Html.LabelFor(model => model.From)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.From.Name)
    </div>
    <div class="display-label">
        @Html.LabelFor(model => model.To)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.To.Name)
    </div>
    <div class="display-label">
        @Html.LabelFor(model => model.Comment)
        @Html.DisplayFor(model => model.Comment)
    </div>
</fieldset>

<table>
    <tr>
        <th>
            @Html.LabelFor(x => new InventoryTransferDetail().Quantity)
        </th>
        <th>
            @Html.LabelFor(x => new InventoryTransferDetail().ProductCode)
        </th>
        <th>
            @Html.LabelFor(x => new InventoryTransferDetail().ProductName)
        </th>
    </tr>
@foreach (var item in Model.Details) {
    <tr>
        <td class="number">
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td class="center">
            @Html.DisplayFor(modelItem => item.ProductCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductName)
        </td>
    </tr>
}
</table>

<p>
    @Html.ActionLink(Resources.BackToList, "Transfers", new { }, new { @class = "button icon back" })
</p>